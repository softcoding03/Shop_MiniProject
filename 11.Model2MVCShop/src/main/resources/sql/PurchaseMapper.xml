<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PurchaseMapper">
 	
 	
	<resultMap id="purchaseSelectMap" type="purchase">
		<result property="tranNo" 				column="tran_no" 			jdbcType="NUMERIC"/>
		<result property="purchaseProd.prodNo"	column="prod_no" 			jdbcType="NUMERIC" />
		<result property="buyer.userId" 		column="buyer_id" 			jdbcType="VARCHAR" />
		<result property="receiverName" 		column="receiver_name" 		jdbcType="VARCHAR" />
		<result property="receiverPhone" 	column="receiver_phone" 	jdbcType="VARCHAR" />
		<result property="dlvyAddr" 			column="dlvy_addr" 			jdbcType="VARCHAR" />
		<result property="dlvyRequest" 		column="dlvy_request" 		jdbcType="VARCHAR" />		
		<result property="tranCode" 			column="tran_status_code" 	jdbcType="VARCHAR" />
		<result property="orderDate" 			column="order_data" 		jdbcType="DATE" />		
		<result property="impUid" 				column="imp_uid" 	jdbcType="VARCHAR" />
		<result property="merchantUid" 		column="merchant_uid" 	jdbcType="VARCHAR" />
		<result property="refund" 		column="refund" 	jdbcType="VARCHAR" />
		<result property="purchaseProd.prodName"	column="prod_name" 			jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- SQL : 구매 하기(구매이력에 추가) INSERT -->
	<insert 	id="addPurchase"	parameterType="purchase" >
	 	INSERT
		INTO transaction 
		VALUES (seq_transaction_tran_no.nextval, #{purchaseProd.prodNo} , #{buyer.userId} , 
				 #{receiverName}, #{receiverPhone},	#{dlvyAddr} , #{dlvyRequest} ,#{tranCode}, sysdate,
				 #{impUid}, #{merchantUid}, '0') 
	</insert>
	 
	 <!-- SQL : 선택한 하나의 상품 구매상세내역 보기 SELECT ONE -->
	 <select 	id="getPurchase"	parameterType="int"	resultMap="purchaseSelectMap">
		SELECT * 		
		FROM transaction
		WHERE tran_no = #{value}
	 </select>
	 
	 <!-- 마지막에 insert 된 값 가져오기 -->
	 <select id="getPurchaseLast" resultType="_int">
	 	SELECT MAX(tran_no) FROM transaction
	 </select>
	 
		 
	<!-- SQL : 구매이력 리스트 출력 SELECT LIST -->
	<select  id="getPurchaseList"  parameterType="java.util.Map"	resultMap="purchaseSelectMap">
	  		  	
	  	SELECT * 
	  	FROM (SELECT inner_table. * , ROWNUM AS row_seq 
	  			FROM (select t.*, p.prod_name 
	  					from transaction t
	  					JOIN product p ON t.prod_no = p.prod_no
	  					where t.buyer_Id =#{userId}
	  					order by tran_no) inner_table 
	  			WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	 
	 </select>
	 
	 <select  id="getPurchaseList2"  parameterType="java.util.Map"	resultMap="purchaseSelectMap">
	  		  	
	  	SELECT * 
	  	FROM (SELECT inner_table. * , ROWNUM AS row_seq 
	  			FROM (select t.*, p.prod_name 
	  					from transaction t
	  					JOIN product p ON t.prod_no = p.prod_no
	  					order by tran_no) inner_table 
	  			WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	 
	 </select>
	 
	 
	 <!-- refund 0 -> 1 ->2 환불요청 UPDATE -->
	 <update	id="updatePurchase"	parameterType="purchase" >
	   	UPDATE transaction
	   	<set>
	   	refund		= #{refund}
	   	</set>
	   	WHERE tran_NO = #{tranNo}
	 </update>
	 
	 
	 <!-- 구매상태 변경 1,2,3 sql -->
	 <update	id="updateTranCode"	parameterType="purchase" >
	   	UPDATE transaction
	   	<set>
	   		tran_status_code = #{tranCode} 
	   	</set>
	   		WHERE tran_NO = #{tranNo}
	 </update>
	 
	 <select  id="getRefund" resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT *
	  			FROM transaction
	  			WHERE refund = '1') countTable						
	 </select>
	 
	 
	 
	 	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="string" resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT *
	  			FROM transaction
	  			WHERE buyer_id = #{userId}
	  			Order by tran_no ) countTable						
	 </select>
	
	<!-- purchaseListManager위한 모든 count -->	 
	 <select  id="getTotalCount2"  parameterType="string" resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT *
	  			FROM transaction
	  			Order by tran_no ) countTable						
	 </select>
	 
</mapper>